version: '3.8'

networks:
  kafka-net:
    driver: bridge

services:

  ##################
  # KAFKA SERVICES #
  ##################

  zookeeper:
    image: confluentinc/cp-zookeeper:7.9.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-net

  kafka:
    image: confluentinc/cp-kafka:7.9.1
    depends_on:
      - zookeeper
    environment:
      # Kafka settings
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # JMX settings for monitoring
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: kafka
      KAFKA_OPTS: >-
        -javaagent:/opt/jmx_exporter/jmx_prometheus_javaagent.jar=9404:/opt/jmx_exporter/kafka-jmx-exporter.yml
        -Dcom.sun.management.jmxremote
        -Dcom.sun.management.jmxremote.local.only=false
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false
        -Djava.rmi.server.hostname=kafka
    ports:
      # Expose Kafka on port 9092
      - "9092:9092"
      # JMX ports for monitoring
      - "9999:9999"
      - "9404:9404"
    volumes:
      # JMX Exporter files
      - "${PWD}/jmxexporter/jmx_prometheus_javaagent-1.3.0.jar:/opt/jmx_exporter/jmx_prometheus_javaagent.jar"
      - "${PWD}/jmxexporter/config.yml:/opt/jmx_exporter/kafka-jmx-exporter.yml"
    networks:
      - kafka-net

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.9.1
    depends_on:
      - kafka
    environment:
      # Kafka connect settings
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_PORT: 8083
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_GROUP_ID: "compose-connect-group"
      CONNECT_CONFIG_STORAGE_TOPIC: "docker-connect-configs"
      CONNECT_OFFSET_STORAGE_TOPIC: "docker-connect-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "docker-connect-status"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_PLUGIN_PATH: "/usr/share/java"
      # JMX settings for monitoring
      CONNECT_JMX_PORT: 9998
      CONNECT_JMX_HOSTNAME: kafka-connect
      KAFKA_OPTS: >-
        -javaagent:/opt/jmx_exporter/jmx_prometheus_javaagent.jar=9405:/opt/jmx_exporter/kafka-connect-jmx-exporter.yml
        -Dcom.sun.management.jmxremote
        -Dcom.sun.management.jmxremote.local.only=false
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false
        -Djava.rmi.server.hostname=kafka-connect
    ports:
      # Expose Kafka Connect REST API on port 8083
      - "8083:8083"
      # JMX port for monitoring
      - "9998:9998"
      - "9405:9405"
    volumes:
      # kafka connect plugins
      - "${PWD}/kafka-connect-plugins/confluentinc-kafka-connect-http-source-1.0.0:/usr/share/java/confluentinc-kafka-connect-http-source"
      # JMX Exporter files
      - "${PWD}/jmxexporter/jmx_prometheus_javaagent-1.3.0.jar:/opt/jmx_exporter/jmx_prometheus_javaagent.jar"
      - "${PWD}/jmxexporter/config.yml:/opt/jmx_exporter/kafka-connect-jmx-exporter.yml"
    networks:
      - kafka-net



  ##################
  #   PROMETHEUS   #
  ##################

  prometheus:
    image: bitnami/prometheus:3.4.1
    ports:
      - "9090:9090"
    volumes:
      - "${PWD}/prometheus/prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml"
    networks:
      - kafka-net



  ##################
  #  CMD LAUNCHER  #
  ##################

  ubuntu-init:
    image: ubuntu:24.04
    depends_on:
      - kafka-connect
    volumes:
      - "${PWD}/entrypoints/ubuntu-init.entrypoint.sh:/etc/ubuntu-init/entrypoint.sh"
      - "${PWD}/kafka-connect-settings/velib-http-source.json:/tmp/velib-http-source.json"
    entrypoint: ["/etc/ubuntu-init/entrypoint.sh"]
    networks:
      - kafka-net